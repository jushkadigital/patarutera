/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    tours: Tour;
    ofertas: Oferta;
    tourCategory: TourCategory;
    destinations: Destination;
    blogCategories: BlogCategory;
    posts: Post;
    paquetes: Paquete;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    tours: ToursSelect<false> | ToursSelect<true>;
    ofertas: OfertasSelect<false> | OfertasSelect<true>;
    tourCategory: TourCategorySelect<false> | TourCategorySelect<true>;
    destinations: DestinationsSelect<false> | DestinationsSelect<true>;
    blogCategories: BlogCategoriesSelect<false> | BlogCategoriesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    paquetes: PaquetesSelect<false> | PaquetesSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  roles: ('admin' | 'editor' | 'user')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  heroPageBlocks?: (BannerBlock | CarouselHeroPage)[] | null;
  layout: (
    | RowBlock
    | GridToursBlock
    | MediaBlock
    | PostRelationTourBlockType
    | SociosBlockType
    | ReconocimientosBlockType
    | OfertasBlock
    | CarouselDestinationBlock
    | TikTokLinksBlockType
    | BeneficiosBlockType
    | EstadisticasBlockType
    | TextContentBlockType
    | GridImagesBlockType
  )[];
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  /**
   * Si está marcado, los campos de este bloque se mostrarán con logica del frontend.
   */
  overrideDefaults?: boolean | null;
  title?: string | null;
  image?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselHeroPage".
 */
export interface CarouselHeroPage {
  id?: string | null;
  blockName?: string | null;
  blockType: 'carouselHeroPage';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RowBlock".
 */
export interface RowBlock {
  /**
   * Añade un item por cada columna que necesites. Cada item contendrá sus propios bloques internos.
   */
  columns?:
    | {
        columnWidth: '25' | '33.333333' | '50' | '66.666667' | '75' | '100';
        /**
         * Añade los bloques de contenido que irán en esta columna.
         */
        columnBlocks: (
          | GridToursBlock
          | MediaBlock
          | PostRelationTourBlockType
          | SociosBlockType
          | ReconocimientosBlockType
          | OfertasBlock
          | CarouselDestinationBlock
          | TikTokLinksBlockType
          | BeneficiosBlockType
          | EstadisticasBlockType
          | TextContentBlockType
          | GridImagesBlockType
        )[];
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'rowBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GridToursBlock".
 */
export interface GridToursBlock {
  /**
   * Si está marcado, los campos de este bloque se mostrarán con logica del frontend.
   */
  overrideDefaults?: boolean | null;
  blockTitle: TitleGroup;
  gridColumns?: number | null;
  /**
   * True grid, false list
   */
  gridStyle?: boolean | null;
  /**
   * Si se selecciona una categoría, solo se mostrarán las tours de esa categoría.
   */
  category?: (number | TourCategory)[] | null;
  /**
   * Si se selecciona un destino, solo se mostrarán las tours de ese destino.
   */
  destination?: (number | null) | Destination;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gridTours';
}
/**
 * Configura la apariencia del elemento título.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TitleGroup".
 */
export interface TitleGroup {
  /**
   * El contenido principal del texto del título.
   */
  titleText: string;
  /**
   * Selecciona la etiqueta HTML de encabezado (ej., H1, H2).
   */
  tag: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  /**
   * Selecciona el tamaño relativo de la fuente.
   */
  size: 'small' | 'medium' | 'large' | 'xlarge';
  /**
   * Introduce un valor de color CSS (ej., #ff0000, rgba(255,0,0,0.5), red).
   */
  textColor?: string | null;
  /**
   * Introduce un valor de color CSS para el subrayado.
   */
  underlineColor?: string | null;
}
/**
 * Categorías para agrupar tours.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tourCategory".
 */
export interface TourCategory {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gestionar destinos de viaje.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "destinations".
 */
export interface Destination {
  id: number;
  name: string;
  imageDestination?: (number | null) | Media;
  backgroundDestination?: (number | null) | Media;
  carouselItemDestination?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostRelationTourBlockType".
 */
export interface PostRelationTourBlockType {
  blockTitle: TitleGroup;
  parrafo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  postRelationTour?: (number | Post)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'postRelationTour';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  featuredImage: number | Media;
  description?: string | null;
  backgroundImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  gallery?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  blocks?: (ReconocimientosBlockType | SociosBlockType)[] | null;
  author: number | User;
  categories?: (number | BlogCategory)[] | null;
  publishedDate?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReconocimientosBlockType".
 */
export interface ReconocimientosBlockType {
  blockTitle: TitleGroup;
  reconocimientos?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'reconocimientos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SociosBlockType".
 */
export interface SociosBlockType {
  blockTitle: TitleGroup;
  socios?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'socios';
}
/**
 * Categories for blog posts.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCategories".
 */
export interface BlogCategory {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OfertasBlock".
 */
export interface OfertasBlock {
  title: TitleGroup;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ofertas';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselDestinationBlock".
 */
export interface CarouselDestinationBlock {
  title: TitleGroup;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carouselDestination';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TikTokLinksBlockType".
 */
export interface TikTokLinksBlockType {
  blockTitle: TitleGroup;
  videoLinks?:
    | {
        url: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tikTokLinks';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BeneficiosBlockType".
 */
export interface BeneficiosBlockType {
  blockTitle: TitleGroup;
  colorItem: string;
  beneficios?:
    | {
        beneficioText: string;
        beneficioImage?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'beneficios';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EstadisticasBlockType".
 */
export interface EstadisticasBlockType {
  estadisticasText: {
    title?: string | null;
    description: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    colorBox?: string | null;
    estadisticasBox?:
      | {
          numbers?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'estadisticas';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextContentBlockType".
 */
export interface TextContentBlockType {
  blockTitle: TitleGroup;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Controls the text alignment of the description content.
   */
  descriptionAlignment?: ('left' | 'center' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textContent';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gridImagesBlockType".
 */
export interface GridImagesBlockType {
  typeGrid: 'masonry' | 'overlapping' | 'list' | 'mosaic' | 'grid';
  Image?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gridImages';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours".
 */
export interface Tour {
  id: number;
  title: string;
  heroTour?: TourHerocarB[] | null;
  layout: (
    | DescrPriceBlock
    | GuiaTourBlock
    | GridToursBlock
    | PostRelationTourBlockType
    | YouTubeLinksBlockType
    | SociosBlockType
    | ReconocimientosBlockType
    | TextContentBlockType
  )[];
  featuredImage: number | Media;
  miniDescription: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  Desde: string;
  price: number;
  'Person desc': string;
  iconMaxPassengers?: (number | null) | Media;
  maxPassengers: number;
  iconDifficulty?: (number | null) | Media;
  difficulty: 'easy' | 'medium' | 'hard';
  /**
   * Categorías a las que pertenece este tour.
   */
  categorias?: (number | TourCategory)[] | null;
  /**
   * Destinos a los que pertenece este tour.
   */
  destinos?: (number | null) | Destination;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TourHerocarB".
 */
export interface TourHerocarB {
  carContent?: {
    carImages?:
      | {
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  ImageContent: {
    image: number | Media;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'tourHerocar';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DescrPriceBlock".
 */
export interface DescrPriceBlock {
  blockTitle: TitleGroup;
  leftColumn: {
    tourTitle: string;
    tourDescription: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  rightColumn: {
    priceTitle?: string | null;
    prevText?: string | null;
    price: number;
    nextText: string;
    paymentForm?: {
      iconDate?: (number | null) | Media;
      InputPlaceHolderDate?: string | null;
      iconPassengers?: (number | null) | Media;
      InputPlaceHolderPassengers?: string | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'descrPrice';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GuiaTourBlock".
 */
export interface GuiaTourBlock {
  blockTitle: TitleGroup;
  /**
   * Añade exactamente cuatro secciones, cada uno con texto e icono.
   */
  sectionItinerario: {
    iconText: string;
    /**
     * Sube una imagen pequeña de icono.
     */
    iconImage: number | Media;
    contentSection: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  /**
   * Añade exactamente cuatro secciones, cada uno con texto e icono.
   */
  sectionIncluyeNoIncluye: {
    iconText: string;
    /**
     * Sube una imagen pequeña de icono.
     */
    iconImage: number | Media;
    contentSection: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  /**
   * Añade exactamente cuatro secciones, cada uno con texto e icono.
   */
  sectionPrecios: {
    iconText: string;
    /**
     * Sube una imagen pequeña de icono.
     */
    iconImage: number | Media;
    contentSection: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  /**
   * Añade exactamente cuatro secciones, cada uno con texto e icono.
   */
  sectionInfoViaje: {
    iconText: string;
    /**
     * Sube una imagen pequeña de icono.
     */
    iconImage: number | Media;
    contentSection: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'guiaTour';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YouTubeLinksBlockType".
 */
export interface YouTubeLinksBlockType {
  blockTitle: TitleGroup;
  videoLinks?:
    | {
        url: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'youTubeLinks';
}
/**
 * Ofertas especiales de Tours
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ofertas".
 */
export interface Oferta {
  id: number;
  title: string;
  type: string;
  /**
   * Ingrese el descuento en % (e.g., 10 para 10%).
   */
  descuentoPorcentaje: number;
  persona: string;
  imagen: number | Media;
  price?: number | null;
  slug?: string | null;
  tourRelacionado: number | Tour;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paquetes".
 */
export interface Paquete {
  id: number;
  title: string;
  heroPaquete?: PaqueteHerocar[] | null;
  layout?:
    | (
        | DescrPriceBlock
        | GuiaTourBlock
        | GridToursBlock
        | PostRelationTourBlockType
        | YouTubeLinksBlockType
        | SociosBlockType
        | ReconocimientosBlockType
      )[]
    | null;
  featuredImage: number | Media;
  miniDescription: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  Desde: string;
  price: number;
  'Person desc': string;
  iconMaxPassengers?: (number | null) | Media;
  maxPassengers: number;
  iconDifficulty?: (number | null) | Media;
  difficulty: 'easy' | 'medium' | 'hard';
  /**
   * Destinos a los que pertenece este tour.
   */
  destinos?: (number | Destination)[] | null;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PaqueteHerocar".
 */
export interface PaqueteHerocar {
  carContent?: {
    carImages?:
      | {
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  ImageContent: {
    image: number | Media;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'paqueteHerocar';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'tours';
        value: number | Tour;
      } | null)
    | ({
        relationTo: 'ofertas';
        value: number | Oferta;
      } | null)
    | ({
        relationTo: 'tourCategory';
        value: number | TourCategory;
      } | null)
    | ({
        relationTo: 'destinations';
        value: number | Destination;
      } | null)
    | ({
        relationTo: 'blogCategories';
        value: number | BlogCategory;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'paquetes';
        value: number | Paquete;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  heroPageBlocks?:
    | T
    | {
        banner?: T | BannerBlockSelect<T>;
        carouselHeroPage?: T | CarouselHeroPageSelect<T>;
      };
  layout?:
    | T
    | {
        rowBlock?: T | RowBlockSelect<T>;
        gridTours?: T | GridToursBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        postRelationTour?: T | PostRelationTourBlockTypeSelect<T>;
        socios?: T | SociosBlockTypeSelect<T>;
        reconocimientos?: T | ReconocimientosBlockTypeSelect<T>;
        ofertas?: T | OfertasBlockSelect<T>;
        carouselDestination?: T | CarouselDestinationBlockSelect<T>;
        tikTokLinks?: T | TikTokLinksBlockTypeSelect<T>;
        beneficios?: T | BeneficiosBlockTypeSelect<T>;
        estadisticas?: T | EstadisticasBlockTypeSelect<T>;
        textContent?: T | TextContentBlockTypeSelect<T>;
        gridImages?: T | GridImagesBlockTypeSelect<T>;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock_select".
 */
export interface BannerBlockSelect<T extends boolean = true> {
  overrideDefaults?: T;
  title?: T;
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselHeroPage_select".
 */
export interface CarouselHeroPageSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RowBlock_select".
 */
export interface RowBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        columnWidth?: T;
        columnBlocks?:
          | T
          | {
              gridTours?: T | GridToursBlockSelect<T>;
              mediaBlock?: T | MediaBlockSelect<T>;
              postRelationTour?: T | PostRelationTourBlockTypeSelect<T>;
              socios?: T | SociosBlockTypeSelect<T>;
              reconocimientos?: T | ReconocimientosBlockTypeSelect<T>;
              ofertas?: T | OfertasBlockSelect<T>;
              carouselDestination?: T | CarouselDestinationBlockSelect<T>;
              tikTokLinks?: T | TikTokLinksBlockTypeSelect<T>;
              beneficios?: T | BeneficiosBlockTypeSelect<T>;
              estadisticas?: T | EstadisticasBlockTypeSelect<T>;
              textContent?: T | TextContentBlockTypeSelect<T>;
              gridImages?: T | GridImagesBlockTypeSelect<T>;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GridToursBlock_select".
 */
export interface GridToursBlockSelect<T extends boolean = true> {
  overrideDefaults?: T;
  blockTitle?: T | TitleGroupSelect<T>;
  gridColumns?: T;
  gridStyle?: T;
  category?: T;
  destination?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TitleGroup_select".
 */
export interface TitleGroupSelect<T extends boolean = true> {
  titleText?: T;
  tag?: T;
  size?: T;
  textColor?: T;
  underlineColor?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PostRelationTourBlockType_select".
 */
export interface PostRelationTourBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  parrafo?: T;
  postRelationTour?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SociosBlockType_select".
 */
export interface SociosBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  socios?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReconocimientosBlockType_select".
 */
export interface ReconocimientosBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  reconocimientos?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OfertasBlock_select".
 */
export interface OfertasBlockSelect<T extends boolean = true> {
  title?: T | TitleGroupSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselDestinationBlock_select".
 */
export interface CarouselDestinationBlockSelect<T extends boolean = true> {
  title?: T | TitleGroupSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TikTokLinksBlockType_select".
 */
export interface TikTokLinksBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  videoLinks?:
    | T
    | {
        url?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BeneficiosBlockType_select".
 */
export interface BeneficiosBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  colorItem?: T;
  beneficios?:
    | T
    | {
        beneficioText?: T;
        beneficioImage?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EstadisticasBlockType_select".
 */
export interface EstadisticasBlockTypeSelect<T extends boolean = true> {
  estadisticasText?:
    | T
    | {
        title?: T;
        description?: T;
        colorBox?: T;
        estadisticasBox?:
          | T
          | {
              numbers?: T;
              description?: T;
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextContentBlockType_select".
 */
export interface TextContentBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  description?: T;
  descriptionAlignment?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gridImagesBlockType_select".
 */
export interface GridImagesBlockTypeSelect<T extends boolean = true> {
  typeGrid?: T;
  Image?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours_select".
 */
export interface ToursSelect<T extends boolean = true> {
  title?: T;
  heroTour?:
    | T
    | {
        tourHerocar?: T | TourHerocarBSelect<T>;
      };
  layout?:
    | T
    | {
        descrPrice?: T | DescrPriceBlockSelect<T>;
        guiaTour?: T | GuiaTourBlockSelect<T>;
        gridTours?: T | GridToursBlockSelect<T>;
        postRelationTour?: T | PostRelationTourBlockTypeSelect<T>;
        youTubeLinks?: T | YouTubeLinksBlockTypeSelect<T>;
        socios?: T | SociosBlockTypeSelect<T>;
        reconocimientos?: T | ReconocimientosBlockTypeSelect<T>;
        textContent?: T | TextContentBlockTypeSelect<T>;
      };
  featuredImage?: T;
  miniDescription?: T;
  Desde?: T;
  price?: T;
  'Person desc'?: T;
  iconMaxPassengers?: T;
  maxPassengers?: T;
  iconDifficulty?: T;
  difficulty?: T;
  categorias?: T;
  destinos?: T;
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TourHerocarB_select".
 */
export interface TourHerocarBSelect<T extends boolean = true> {
  carContent?:
    | T
    | {
        carImages?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  ImageContent?:
    | T
    | {
        image?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DescrPriceBlock_select".
 */
export interface DescrPriceBlockSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  leftColumn?:
    | T
    | {
        tourTitle?: T;
        tourDescription?: T;
      };
  rightColumn?:
    | T
    | {
        priceTitle?: T;
        prevText?: T;
        price?: T;
        nextText?: T;
        paymentForm?:
          | T
          | {
              iconDate?: T;
              InputPlaceHolderDate?: T;
              iconPassengers?: T;
              InputPlaceHolderPassengers?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GuiaTourBlock_select".
 */
export interface GuiaTourBlockSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  sectionItinerario?:
    | T
    | {
        iconText?: T;
        iconImage?: T;
        contentSection?: T;
      };
  sectionIncluyeNoIncluye?:
    | T
    | {
        iconText?: T;
        iconImage?: T;
        contentSection?: T;
      };
  sectionPrecios?:
    | T
    | {
        iconText?: T;
        iconImage?: T;
        contentSection?: T;
      };
  sectionInfoViaje?:
    | T
    | {
        iconText?: T;
        iconImage?: T;
        contentSection?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YouTubeLinksBlockType_select".
 */
export interface YouTubeLinksBlockTypeSelect<T extends boolean = true> {
  blockTitle?: T | TitleGroupSelect<T>;
  videoLinks?:
    | T
    | {
        url?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ofertas_select".
 */
export interface OfertasSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  descuentoPorcentaje?: T;
  persona?: T;
  imagen?: T;
  price?: T;
  slug?: T;
  tourRelacionado?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tourCategory_select".
 */
export interface TourCategorySelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "destinations_select".
 */
export interface DestinationsSelect<T extends boolean = true> {
  name?: T;
  imageDestination?: T;
  backgroundDestination?: T;
  carouselItemDestination?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogCategories_select".
 */
export interface BlogCategoriesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  featuredImage?: T;
  description?: T;
  backgroundImage?: T;
  content?: T;
  gallery?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  blocks?:
    | T
    | {
        reconocimientos?: T | ReconocimientosBlockTypeSelect<T>;
        socios?: T | SociosBlockTypeSelect<T>;
      };
  author?: T;
  categories?: T;
  publishedDate?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paquetes_select".
 */
export interface PaquetesSelect<T extends boolean = true> {
  title?: T;
  heroPaquete?:
    | T
    | {
        paqueteHerocar?: T | PaqueteHerocarSelect<T>;
      };
  layout?:
    | T
    | {
        descrPrice?: T | DescrPriceBlockSelect<T>;
        guiaTour?: T | GuiaTourBlockSelect<T>;
        gridTours?: T | GridToursBlockSelect<T>;
        postRelationTour?: T | PostRelationTourBlockTypeSelect<T>;
        youTubeLinks?: T | YouTubeLinksBlockTypeSelect<T>;
        socios?: T | SociosBlockTypeSelect<T>;
        reconocimientos?: T | ReconocimientosBlockTypeSelect<T>;
      };
  featuredImage?: T;
  miniDescription?: T;
  Desde?: T;
  price?: T;
  'Person desc'?: T;
  iconMaxPassengers?: T;
  maxPassengers?: T;
  iconDifficulty?: T;
  difficulty?: T;
  destinos?: T;
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PaqueteHerocar_select".
 */
export interface PaqueteHerocarSelect<T extends boolean = true> {
  carContent?:
    | T
    | {
        carImages?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  ImageContent?:
    | T
    | {
        image?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'tours';
          value: number | Tour;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'paquetes';
          value: number | Paquete;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}
